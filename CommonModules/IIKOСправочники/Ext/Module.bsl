Функция ПолучитьЗаголовкиСCookie(ПП)
	CookieЗаголовки	= Новый Соответствие;
	CookieЗаголовки.Вставить("Cookie", ПП.IIKO_COOKIE);
	CookieЗаголовки.Вставить("Connection", "keep-alive");
	Возврат CookieЗаголовки;
КонецФункции

Функция ПолучитьСоответствиеСправочниковIIKO() Экспорт
	СМетодКлюч = Новый Соответствие;
	СМетодКлюч.Вставить("products", 		"Номенклатура");
	СМетодКлюч.Вставить("productGroups",	"ГруппыНоменклатуры");
	СМетодКлюч.Вставить("units", 			"ЕдиницыИзмерения");
	СМетодКлюч.Вставить("stores", 			"Склады");
	СМетодКлюч.Вставить("suppliers", 		"Поставщики");
	СМетодКлюч.Вставить("departments", 		"Подразделения");
	СМетодКлюч.Вставить("expenseAccounts", 	"СтатьиРасходов");
	Возврат СМетодКлюч;
КонецФункции

Функция ПолучитьSQLIiko(ТипБД, ТипЗапроса)
	ЗапросSQL = Новый Запрос("ВЫБРАТЬ
	                         |	IIKOSQLЗапросы.Текст КАК Текст,
	                         |	IIKOSQLЗапросы.Поля КАК Поля
	                         |ИЗ
	                         |	РегистрСведений.IIKOSQLЗапросы КАК IIKOSQLЗапросы
	                         |ГДЕ
	                         |	IIKOSQLЗапросы.ТипБД = &ТипБД
	                         |	И IIKOSQLЗапросы.ТипЗапроса = &ТипЗапроса");
	ЗапросSQL.УстановитьПараметр("ТипБД", ТипБД);
	ЗапросSQL.УстановитьПараметр("ТипЗапроса", ТипЗапроса);
	ТЗ = ЗапросSQL.Выполнить().Выгрузить();
	Если ТЗ.Количество()>0 Тогда
		Возврат Новый Структура("Текст, СтрокаПолей", ТЗ[0].Текст, ТЗ[0].Поля);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ВыполнитьНаСервереАйко(ТипБД, ТипЗапроса, СоответствиеПараметров=Неопределено, ПП) Экспорт// ПП - параметры подключения
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	ЗапросКАйко = ПолучитьSQLIiko(ТипБД, ТипЗапроса);
	Если ЗапросКАйко <> Неопределено Тогда
		Попытка
			HTTPСоединение = Новый HTTPСоединение(ПП.IIKO_HOST, Число(ПП.IIKO_PORT));	
		Исключение
			ОбработкаДанных.ЗаписатьВЛог(ОписаниеОшибки());
			Возврат Неопределено;
		КонецПопытки;
		Если СоответствиеПараметров <> Неопределено Тогда
			SQLЗапрос = ЗапросКАйко.Текст;
			Для Каждого Параметр Из СоответствиеПараметров Цикл
				SQLЗапрос = СтрЗаменить(SQLЗапрос, "["+Строка(Параметр.Ключ)+"]", Параметр.Значение);
			КонецЦикла;
		Иначе
			SQLЗапрос = ЗапросКАйко.Текст;
		КонецЕсли;
		Попытка
			
			HTTPЗапрос = Новый HTTPЗапрос("/resto/service/maintance/sql.jsp?sql="+
											КодироватьСтроку(SQLЗапрос, СпособКодированияСтроки.КодировкаURL),
											ПолучитьЗаголовкиСCookie(ПП));
			HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос, ИмяФайла);
		Исключение
			ОбработкаДанных.ЗаписатьВЛог(ОписаниеОшибки());
			Возврат Неопределено;
		КонецПопытки;
		Если HTTPОтвет.КодСостояния = 200 Тогда
			ОтветМассивСоответствий = Новый Массив;
			Попытка
				МассивПолей = СтрРазделить(ЗапросКАйко.СтрокаПолей, ",");
				
				ЧтениеXml = Новый ЧтениеXML;
				ЧтениеXml.ОткрытьФайл(ИмяФайла);
				ЧтениеXml.Прочитать();			
				Пока ЧтениеXml.Прочитать() Цикл 
					Если ЧтениеXml.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
						Если ЧтениеXml.Имя = "row" Тогда
							ОтветСоответствие = Новый Соответствие;	
						Иначе
							Для Каждого ИмяПоля Из МассивПолей Цикл
								Если ЧтениеXml.Имя = ИмяПоля Тогда
									ЧтениеXml.Прочитать();
									ОтветСоответствие.Вставить(ИмяПоля, ЧтениеXml.Значение);
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					ИначеЕсли ЧтениеXml.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXml.Имя = "row" Тогда
						ОтветМассивСоответствий.Добавить(ОтветСоответствие);
					КонецЕсли;
				КонецЦикла;
				ЧтениеXml.Закрыть();
			Исключение
				ОбработкаДанных.ЗаписатьВЛог("Не удалось прочитать XML-файл");
				Возврат Неопределено;
			КонецПопытки;
			Возврат ОтветМассивСоответствий;
		КонецЕсли;
	Иначе
		ОбработкаДанных.ЗаписатьВЛог("Неизвестный тип запроса "+ТипЗапроса);
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// Возвращает структуру с полями:
// Результат - Истина, если все ок
// Ошибка - если Результат - Ложь, содержит ошибку из XML-ответа Айко
// УидАйко - идентификатор созданного объекта в случае успешного создания
Функция ОбработатьHTTPОтветПриСозданииОбъектаАйко(HTTPОтвет)
	Если HTTPОтвет.КодСостояния <> 200 Тогда
		//ЗаписатьВЛог("Веб-сервер вернул код, отличный от 200 при создании объекта Айко!");
		Возврат Неопределено;	
	КонецЕсли;
	
	XMLОтвета = ОбработкаДанных.РасшифроватьGZIP(HTTPОтвет.ПолучитьТелоКакДвоичныеДанные());
	СтруктураОтвета = Новый Структура;
	ЧтениеXml = Новый ЧтениеXML();
	ЧтениеXml.УстановитьСтроку(XMLОтвета);
		
	Пока ЧтениеXml.Прочитать() Цикл
		Если ЧтениеXml.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если ЧтениеXml.Имя = "returnValue" Тогда
				ЧтениеXml.Прочитать();
				СтруктураОтвета.Вставить("УидАйко", ЧтениеXml.Значение);
			КонецЕсли;
			Если ЧтениеXml.Имя = "success" Тогда
				ЧтениеXml.Прочитать();
				Если ЧтениеXml.Значение = "true" Тогда
					СтруктураОтвета.Вставить("Результат", Истина);
				Иначе
					СтруктураОтвета.Вставить("Результат", Ложь);
				КонецЕсли;
			КонецЕсли;
			Если ЧтениеXml.Имя = "errorString" Тогда
				ЧтениеXml.Прочитать();
				СтруктураОтвета.Вставить("Ошибка", ЧтениеXml.Значение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЧтениеXml.Закрыть();
	
	Возврат СтруктураОтвета;
КонецФункции